#-------------------------------------------------
R1.1 Keras + Embeding layer + FastText
- params:
    VOCAB_SIZE = 8000
    OUTPUT_DIM = 200
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 64
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877
 - best round: 5 
 - time/round: (CPU:, GPU:)
 - time: 1630 

R1.2 Keras + Embeding layer + FastText
- params:
    VOCAB_SIZE = 500
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 64
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877 => 0.486043915044
 - best round: 5 
 - time/round: (CPU:, GPU:50)
 - time: 609 

 R1.3 Keras + Embeding layer + FastText
- params:
    VOCAB_SIZE = 400
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 64
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877 => 0.419414996525
 - best round: 5 
 - time/round: (CPU:, GPU:50)
 - time: 654 

#----------------------------------------------------------------------
R2.1 Keras + Embeding layer + CNN
- params:
    VOCAB_SIZE = 500
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 64
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
    CNN parameters: 
        + KERAS_FILTERS = 32
        + KERAS_POOL_SIZE = 3  
        + filter_sizes = [3, 4, 5]
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877 => 0.486043915044 => 0.47597248974
 - best round: 16
 - time/round: (CPU:, GPU:100)
 - time: 2751

 R2.2 Keras + Embeding layer + CNN
- params:
    VOCAB_SIZE = 500
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 64
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
    CNN parameters: 
        + KERAS_FILTERS = 32
        + KERAS_POOL_SIZE = 3  
        + filter_sizes = [3, 4, 5]
- text processing:    
    Embeding = None
    stem = stem
 - metric (rmse): 0.400808424877 => 0.47597248974 => 0.479501656668
 - best round: 17
 - time/round: (CPU:, GPU:100)
 - time: 

R2.3 Keras + Embeding layer + CNN
- params:
    VOCAB_SIZE = 500
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 512
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
    CNN parameters: 
        + KERAS_FILTERS = 32
        + KERAS_POOL_SIZE = 3  
        + filter_sizes = [3, 4, 5]
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877 => 0.47597248974 => 0.507490917762
 - best round: 
 - time/round: (CPU:, GPU:100)
 - time:  

 R2.4 Keras + Embeding layer + CNN
- params:
    VOCAB_SIZE = 500
    OUTPUT_DIM = 50
    KERAS_LEARNING_RATE = 0.001
    KERAS_N_ROUNDS = 200
    KERAS_BATCH_SIZE = 128
    KERAS_NODES = 1024
    KERAS_DROPOUT_RATE = 0.5
    KERAS_VALIDATION_SPLIT = 0.2
    KERAS_EARLY_STOPPING = 3
    KERAS_MAXNORM = 3
    KERAS_PREDICT_BATCH_SIZE = 1024
    VERBOSE = True
    decay = KERAS_LEARNING_RATE / KERAS_N_ROUNDS
    CNN parameters: 
        + KERAS_FILTERS = 32
        + KERAS_POOL_SIZE = 3  
        + filter_sizes = [3, 4, 5]
- text processing:    
    Embeding = None
    stem = None
 - metric (rmse): 0.400808424877 => 0.47597248974 => 0.49277654031
 - best round: 
 - time/round: (CPU:, GPU:100)
 - time:  